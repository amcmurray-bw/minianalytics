version: '3.1'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.11-2.0.0
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "mentions:1:1"
    volumes:
      - ./data/kafka:/var/run/docker.sock

  minianalyticsapi:
    build: minianalytics-api/.
    restart: always
    container_name: minianalyticsapi
    ports:
      - 8081:8081
    working_dir: /opt/app
    hostname: minianalyticsapi
    environment:
      WAIT_HOSTS: mongodb:27017
      JAVA_OPTS: >
       -Dspring.data.mongodb.uri=mongodb://mongodb:27017
       -Djava.security.egd=file:/dev/./urandom

  minianalyticscrawler:
    build: twitter-crawler/.
    restart: always
    container_name: minianalyticscrawler
    ports:
      - 8080:8080
    working_dir: /opt/app
    environment:
      WAIT_HOSTS: kafka:9092,mongodb:27017

  mongodb:
    container_name: mongodb
    image: mongo
    volumes:
      - ./data/mongo:/data/db
    ports:
      - 27017:27017

  storage:
    build: storage/.
    restart: always
    container_name: storage
    working_dir: /opt/app
    environment:
      WAIT_HOSTS: kafka:9092,mongodb:27017,solr:8983

  solr:
    container_name: solr
    image: solr
    ports:
      - "8983:8983"
    volumes:
      - ./data:/opt/solr/server/solr/mycores
      - ./data/solr:/data/db
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - mentions

